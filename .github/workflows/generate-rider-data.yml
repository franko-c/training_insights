name: Generate Rider Data

on:
  workflow_dispatch:
    inputs:
      rider_id:
        description: 'ZwiftPower rider id'
        required: true
        type: string

permissions:
  contents: write
  id-token: write

jobs:
  build-and-generate:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          persist-credentials: true
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run data manager CLI
        run: |
          python -m zwift_api_client.utils.data_manager_cli --refresh-rider ${{ inputs.rider_id }} --yes

      - name: Copy generated JSON to public data folder
        run: |
          mkdir -p public/data/riders/${{ inputs.rider_id }}
          if [ -d zwift_api_client/data/riders/${{ inputs.rider_id }} ]; then
            cp -v zwift_api_client/data/riders/${{ inputs.rider_id }}/*.json public/data/riders/${{ inputs.rider_id }}/ || true
          else
            echo "No generated data found for ${{ inputs.rider_id }}"
          fi

      - name: Validate generated files
        run: |
          set -euo pipefail
          echo "Validating generated JSON files for ${{ inputs.rider_id }}"
          TARGET_DIR=public/data/riders/${{ inputs.rider_id }}
          required=(profile.json races.json events_summary.json)
          missing=()
          if [ ! -d "$TARGET_DIR" ]; then
            echo "Target directory $TARGET_DIR does not exist"
            exit 1
          fi
          for f in "${required[@]}"; do
            if [ ! -s "$TARGET_DIR/$f" ]; then
              echo "MISSING: $TARGET_DIR/$f"
              missing+=("$f")
            else
              echo "FOUND: $TARGET_DIR/$f"
            fi
          done
          if [ ${#missing[@]} -ne 0 ]; then
            echo "Error: required generated files are missing: ${missing[*]}"
            echo "Listing $TARGET_DIR contents for debugging:" 
            ls -la "$TARGET_DIR" || true
            # Exit non-zero so the workflow run is clearly marked failed and operators can inspect logs
            exit 1
          fi

      - name: Commit and push generated files
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "=== Debug: repo info ==="
          git remote -v || true
          git status --porcelain || true
          git branch --show-current || git rev-parse --abbrev-ref HEAD || true
          echo "=== Debug: generated files ==="
          ls -la public/data/riders/${{ inputs.rider_id }} || true
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add public/data/riders/${{ inputs.rider_id }} || true
          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            git commit -m "chore: add/update generated rider data for ${{ inputs.rider_id }}"
            echo "Fetching and rebasing against remote ${GITHUB_REF_NAME:-${{ github.ref_name }}}"
            BRANCH=${{ github.ref_name }}
            git fetch origin $BRANCH || true
            git rebase origin/$BRANCH || true
            echo "Pushing to origin HEAD:${{ github.ref_name }} with token (will attempt safe push then force-with-lease)"
            git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }} HEAD:${{ github.ref_name }} --verbose || \
              git push --force-with-lease https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }} HEAD:${{ github.ref_name }} --verbose
          fi
